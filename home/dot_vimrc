" Vim Configuration File
" ======================

" Theme and Appearance {{{
" ------------------------

colorscheme solarized        " Use the Solarized theme
set background=dark          " Optimize colorscheme for a dark background
let g:solarized_termtrans=1  " Enable transparent background for Solarized theme
" }}}
" Essential Settings {{{
" ----------------------

set nocompatible                    " Disable vi compatibility, enable full vim features
set clipboard^=unnamed,unnamedplus  " Use system clipboard (https://stackoverflow.com/questions/30691466)
set wildmenu                        " Enhance command-line completion
set wildignorecase                  " Make command-line completion case-insensitive
set wildmode=longest:full,full      " Complete the longest common match, then show all matches
set completeopt=menuone,noselect    " Show completion menu for one item and don't preselect
set backspace=indent,eol,start      " Allow backspace in insert mode
set gdefault                        " Add 'g' flag to search/replace (replace all instances in line, not just first)
set encoding=utf-8 nobomb           " Use UTF-8 without Byte Order Mark
let mapleader=","                   " Change mapleader
set updatetime=300                  " Faster completion and CursorHold event time (supports vim-gitgutter plugin)
set signcolumn=yes                  " Show the sign column when necessary (supports vim-gitgutter plugin)
" }}}
" Backup and Undo {{{
" -------------------

set backupdir=~/.vim/backups          " Centralize backups
set directory=~/.vim/swaps            " Centralize swapfiles
set undodir=~/.vim/undo               " Centralize undo history
set backupskip=/tmp/*,/private/tmp/*  " Don’t create backups when editing files in these directories
" }}}
" Modeline and Security {{{
" -------------------------

set modeline     " Respect modeline (embedding file-specific vim settings at the top or bottom of the file)
set modelines=5  " Examine first and last five lines for modelines
" set exrc         " Enable local, per-directory .exrc and .vimrc files
" set secure       " Restrict potentially unsafe commands in local .exrc and .vimrc
" }}}
" Display and Interface {{{
" -------------------------

syntax on                             " Enable syntax highlighting
" set cursorline                      " Highlight current line
set lcs=tab:▸\ ,trail:·,eol:¬,nbsp:_  " Configure how invisible characters should be shown
set list                              " Show invisible characters
set laststatus=2                      " Always show status line
set mouse=a                           " Enable mouse in all modes
set errorbells                        " Enable error bells
set nostartofline                     " Don't reset cursor to start of line when navigating
set ruler                             " Show the cursor position (line and column number) in bottom right corner
set shortmess=atI                     " Don't show intro message when starting vim
set showmode                          " Show the current mode (e.g., INSERT, VISUAL) in bottom left corner
set title                             " Show the filename in the terminal's titlebar
set showcmd                           " Show the (partial) command as it's being typed in the bottom right corner
set scrolloff=3                       " Start scrolling three lines before the horizontal window border
set colorcolumn=80,120                " Set color columns at 80 and 120
" }}}
" Line numbers {{{
" ----------------

set number                                              " Enable line numbers
set relativenumber                                      " Enable relative line numbers
augroup number_toggle                                   " A group of autocommands that can be managed together
    autocmd!
    autocmd BufReadPost,FocusGained * set relativenumber  " Set relative line numbers after reading a buffer and when vim gains focus
    autocmd InsertEnter,FocusLost * set number            " Set absolute line numbers when entering insert mode and when vim loses focus
    autocmd InsertLeave * set relativenumber              " Set relative line numbers when leaving insert mode
augroup END
" }}}
" Search {{{
" ----------

set hlsearch    " Highlight search hits
set ignorecase  " Ignore case in searches
set incsearch   " Highlight dynamically as pattern is typed
" }}}
" Spacing and indentation {{{
" ---------------------------

" overridden by .editorconfig set tabstop=4         " Set tab width to 4 spaces
" overridden by .editorconfig set shiftwidth=4      " Shiftwidth for reindent operations (<< and >>)
" overridden by .editorconfig set softtabstop=4     " Insert/delete 4 spaces when tab/backspace is pressed
" overridden by .editorconfig set expandtab         " Ensure spaces are used instead of tabs
set ai                " Auto-indent
set showmatch         " Show matching brackets/braces/parantheses
set cindent           " Enable cindent
set cinoptions=:0,p0  " Configure cident to closely mimic smartindent
" }}}
" Folding {{{
" -----------

set foldmethod=syntax                   " Use syntax-based folding
set foldtext=gitgutter#fold#foldtext()  " Use GitGutter-augmented folding
let php_folding=1                       " Turn on folding for PHP files
" }}}
" File handling {{{
" -----------------

filetype on         " Enable file type detection
filetype plugin on  " Enable file type plugins
filetype indent on  " Enable file type specific indenting
set endofline       " Ensure Vim adds a newline at the end of the file
set fixendofline    " Adds a newline at the end of the file if one is missing when the file is written
" }}}
" Custom Functions {{{
" --------------------

" Remove trailing newlines
function! TrimTrailingNewlines()
    let l:save = winsaveview()     " Save current window view state so it can be restored after operation
    let old_query = getreg('/')    " Save current search pattern so it can be restored after newline removal
    " Move cursor to end of file
    normal! G
    " While current line is empty, delete current line
    while getline('.') ==# ''
        silent! execute "normal! dd"
    endwhile
    call winrestview(l:save)       " Restore window view state
    call setreg('/', old_query)    " Restore search pattern
endfunction

" Show changes between current buffer and file it was loaded from.
function! DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
" }}}
" Custom Mappings, Abbreviations and Commands {{{
" -----------------------------------------------

" Run TrimTrailingNewlines() on file save
augroup trim_trailing_newlines
    autocmd!
    autocmd BufWritePre * call TrimTrailingNewlines()
augroup END

" Command that calls DiffWithSaved()
command! Diff call DiffWithSaved()

" hit <F2> before and after pasting code to stop autoindent messing with it
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

" vim:foldmethod=marker:foldlevel=0
" }}}
