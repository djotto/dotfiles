#!/usr/bin/env bash

# Check if gls exists and set the appropriate color flags and environmental variables
if type gls &>/dev/null; then
  colorflag="--color"

  LS_COLORS="rs=$(get_color_ls):"                          # reset
  LS_COLORS+="no=$(get_color_ls):"                         # normal text
  LS_COLORS+="fi=$(get_color_ls):"                         # regular files
  LS_COLORS+="di=$(get_color_ls 'blue' '' 'bold'):"        # directories
  LS_COLORS+="ln=$(get_color_ls 'cyan' '' 'bold'):"        # symbolic links
  LS_COLORS+="pi=$(get_color_ls 'yellow' 'black'):"        # pipes
  LS_COLORS+="so=$(get_color_ls 'magenta' '' 'bold'):"     # sockets
  LS_COLORS+="do=$(get_color_ls 'magenta' '' 'bold'):"     # doors
  LS_COLORS+="bd=$(get_color_ls 'yellow' 'black' 'bold'):" # block devices
  LS_COLORS+="cd=$(get_color_ls 'yellow' 'black' 'bold'):" # character devices
  LS_COLORS+="or=$(get_color_ls 'red' 'black' 'bold'):"    # orphan symbolic links
  LS_COLORS+="ex=$(get_color_ls 'green' '' 'bold'):"       # executables
  # archive files
  LS_COLORS+="*.tar=$(get_color_ls 'red' '' 'bold'):*.tgz=$(get_color_ls 'red' '' 'bold'):*.arj=$(get_color_ls 'red' '' 'bold'):*.taz=$(get_color_ls 'red' '' 'bold'):*.lzh=$(get_color_ls 'red' '' 'bold'):*.zip=$(get_color_ls 'red' '' 'bold'):*.z=$(get_color_ls 'red' '' 'bold'):*.Z=$(get_color_ls 'red' '' 'bold'):*.gz=$(get_color_ls 'red' '' 'bold'):*.bz2=$(get_color_ls 'red' '' 'bold'):*.deb=$(get_color_ls 'red' '' 'bold'):*.rpm=$(get_color_ls 'red' '' 'bold'):*.jar=$(get_color_ls 'red' '' 'bold'):"
  # multimedia files
  LS_COLORS+="*.jpg=$(get_color_ls 'magenta' '' 'bold'):*.jpeg=$(get_color_ls 'magenta' '' 'bold'):*.gif=$(get_color_ls 'magenta' '' 'bold'):*.bmp=$(get_color_ls 'magenta' '' 'bold'):*.pbm=$(get_color_ls 'magenta' '' 'bold'):*.pgm=$(get_color_ls 'magenta' '' 'bold'):*.ppm=$(get_color_ls 'magenta' '' 'bold'):*.tga=$(get_color_ls 'magenta' '' 'bold'):*.xbm=$(get_color_ls 'magenta' '' 'bold'):*.xpm=$(get_color_ls 'magenta' '' 'bold'):*.tif=$(get_color_ls 'magenta' '' 'bold'):*.tiff=$(get_color_ls 'magenta' '' 'bold'):*.png=$(get_color_ls 'magenta' '' 'bold'):*.mov=$(get_color_ls 'magenta' '' 'bold'):*.mpg=$(get_color_ls 'magenta' '' 'bold'):*.mpeg=$(get_color_ls 'magenta' '' 'bold'):*.avi=$(get_color_ls 'magenta' '' 'bold'):*.fli=$(get_color_ls 'magenta' '' 'bold'):*.gl=$(get_color_ls 'magenta' '' 'bold'):*.dl=$(get_color_ls 'magenta' '' 'bold'):*.xcf=$(get_color_ls 'magenta' '' 'bold'):*.xwd=$(get_color_ls 'magenta' '' 'bold'):*.ogg=$(get_color_ls 'magenta' '' 'bold'):*.mp3=$(get_color_ls 'magenta' '' 'bold'):*.wav=$(get_color_ls 'magenta' '' 'bold'):"
  export LS_COLORS
  ls_cmd="gls"
else
  # macOS `ls`
  # this is untested.
  colorflag="-G"
  export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
  ls_cmd="ls"
fi

# Define aliases using the determined command and color flag
# Colorized, long format
alias l="command ${ls_cmd} -lF ${colorflag}"
# Colorized, long format, including hidden, excluding . and ..
alias la="command ${ls_cmd} -lAF ${colorflag}"
# Colorized, long format, directories only
alias lsd="command ${ls_cmd} -lF ${colorflag} | grep --color=never '^d'"
# Colorized, short format
alias ls="command ${ls_cmd} ${colorflag}"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Google Chrome
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias canary='/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Show active network interfaces
alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# JavaScriptCore REPL
jscbin="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc";
[ -e "${jscbin}" ] && alias jsc="${jscbin}";
unset jscbin;

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files, preserving hyperlinks
# Usage: `mergepdf input{1,2,3}.pdf`
alias mergepdf='gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=_merged.pdf'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Airport CLI alias
alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
  alias "${method}"="lwp-request -m '${method}'"
done

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# cat but with syntax highlighting
# @see https://github.com/sharkdp/bat/issues/2731
alias cat='bat -P --color=always'
